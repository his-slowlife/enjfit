import telebot

from telebot import types

# bot = telebot.TeleBot('1216448489:AAGa0aixNFa6R9AvpuYF0wkTTlTOauHKYzg') # Sergei's token
# bot = telebot.TeleBot('1281817942:AAE24DX-h9ZunkdS4ZGJvSfxUY5rdqzwdgI') # Oleh's token
bot = telebot.TeleBot('1216448489:AAGa0aixNFa6R9AvpuYF0wkTTlTOauHKYzg')

KEYBOARDS = {
  'main': [
    types.KeyboardButton("–ß–µ–∫-–ª–∏—Å—Ç ‚úÖ"),
    types.KeyboardButton("–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üéØ")
  ],
  'trainings': [
    types.KeyboardButton("–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"),
    types.KeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ"),
    types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
  ]
}

def initialize_keyboard(k):
  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  # print(KEYBOARDS['main'])
  markup.add(*KEYBOARDS[k])
  return markup

@bot.message_handler(commands=['help'])
def about(message):
  bot.send_message(message.chat.id, "–Ø –∫–ª–∞—Å—Å–Ω—ã–π, –ø–æ–∫–∞ —ç—Ç–æ –≤—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å;)")

@bot.message_handler(commands=['start'])
def welcome(message):
  sti = open('hello.webp', 'rb')
  bot.send_sticker(message.chat.id, sti)
  # main keyboard
  markup = initialize_keyboard('main')
  bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –î–∞—à–∏".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text', 'document'])
def ask_bot(message):
  if message.chat.type == 'private':
    if message.text == '–ß–µ–∫-–ª–∏—Å—Ç ‚úÖ':
      doc = open('check.pdf', 'rb')
      bot.send_document(message.chat.id, doc)
    elif message.text == '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üéØ':
      # trainings
      markup = initialize_keyboard('trainings')
      bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é", parse_mode='html', reply_markup=markup)
    elif message.text == '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫':
      bot.send_message(message.chat.id, "–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ + –≤–∏–∑—É–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Ç –î–∞—à–∏ —Å—Ç–æ–∏—Ç 1200—Ä")
    elif message.text == '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ':
      bot.send_message(message.chat.id, "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ —Å —Ä–∞–∑–±–æ—Ä–æ–º —Ç–≤–æ–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 3000—Ä. –ê –µ—â–µ –Ω–∞–ø–∏—à–∏ –±–æ—Ç—É - –ø–∏—Ç–∞–Ω–∏–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ üòâ")
    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
       markup = initialize_keyboard('main')
       bot.send_message(
         message.chat.id, 
         "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
         parse_mode='html', 
         reply_markup=markup
        )
    elif message.text.lower() == '–ø–∏—Ç–∞–Ω–∏–µ':   
       markup = types.InlineKeyboardMarkup(row_width=2)
       item1 = types.InlineKeyboardButton("–î–∞, —è –∑–∞ –ø–ø", callback_data='yes')
       item2 = types.InlineKeyboardButton("–ù–µ—Ç", callback_data='no')
       markup.add(item1, item2)
       bot.send_message(message.chat.id, "–î–æ–±–∞–≤–∏–º –ø–∏—Ç–∞–Ω–∏–µ?",reply_markup=markup)
    else:
      bot.send_message(message.chat.id, "–Ø —É–º–µ—é –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–¥ –∫–Ω–æ–ø–∫–∞–º–∏:)")

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'yes':
                bot.send_message(call.message.chat.id, "–¢–æ–≥–¥–∞ –Ω–∞–ø–∏—à–∏ –ö—Ä–∏—Å—Ç–∏–Ω–µ, –æ–Ω–∞ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥ –∏ —Å —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ—Å—Ç–∞–≤–∏—Ç –¥–ª—è —Ç–µ–±—è –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è")
            elif call.data == 'no':
                bot.send_message(call.message.chat.id, "–•–æ—Ä–æ—à–æ, –Ω–∞–¥–µ—é—Å—å, —Ç—ã —É–∂–µ –∫—É—à–∞–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ:)")

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–ü–∏—Ç–∞–Ω–∏–µ",
                                      reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="–£ —Ç–µ–±—è –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!")

    except Exception as e:
        print(repr(e))
#RUN
bot.polling(none_stop=True)